/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_COMMAND_PB_H_INCLUDED
#define PB_COMMAND_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CommandMessage {
    int32_t id;
/* @@protoc_insertion_point(struct:CommandMessage) */
} CommandMessage;


/* Initializer values for message structs */
#define CommandMessage_init_default              {0}
#define CommandMessage_init_zero                 {0}

/* Field tags (for use in manual encoding/decoding) */
#define CommandMessage_id_tag                    1

/* Struct field encoding specification for nanopb */
#define CommandMessage_FIELDLIST(X, a) \
X(a, STATIC, REQUIRED, INT32, id, 1)
#define CommandMessage_CALLBACK NULL
#define CommandMessage_DEFAULT NULL

extern const pb_msgdesc_t CommandMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CommandMessage_fields &CommandMessage_msg

/* Maximum encoded size of messages (where known) */
#define CommandMessage_size                      11

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
